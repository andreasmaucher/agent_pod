/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AvaPayment, AvaPaymentInterface } from "../AvaPayment";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "avaAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "prizePoolAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "poolFeePerc_",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "teamAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "teamFeePerc_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "ava",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract AVA",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "buyIn",
    inputs: [
      {
        name: "hashedPrompt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setFees",
    inputs: [
      {
        name: "poolFeePerc_",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "teamFeePerc_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "BuyIn",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "hashedPrompt",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161094e38038061094e83398101604081905261002f916100c4565b600080546001600160a01b039687166001600160a01b03199182161790915560058054821673cf77a3ba9a5ca399b7c97c74d54e5b1beb874e431790556001805495871695821695909517909455600380549290951691841691909117909355600255600491909155600680549091163317905561011e565b80516001600160a01b03811681146100bf57600080fd5b919050565b600080600080600060a086880312156100dc57600080fd5b6100e5866100a8565b94506100f3602087016100a8565b60408701519094509250610109606087016100a8565b60809690960151949793965091949392915050565b6108218061012d6000396000f3fe6080604052600436106100385760003560e01c80630b78f9c0146100d25780636b6bce99146100f4578063c3107764146101075761008a565b3661008a5760405162461bcd60e51b815260206004820152601e60248201527f526563656976652066756e6374696f6e206e6f7420737570706f72746564000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601f60248201527f46616c6c6261636b2066756e6374696f6e206e6f7420737570706f72746564006044820152606401610081565b3480156100de57600080fd5b506100f26100ed366004610642565b610143565b005b6100f2610102366004610664565b610258565b34801561011357600080fd5b50600054610127906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6006546001600160a01b0316331461019d5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c79206f70657261746f722063616e2073657420666565730000000000006044820152606401610081565b60646101a98284610693565b11156101f75760405162461bcd60e51b815260206004820152601c60248201527f546f74616c206665652063616e6e6f74206578636565642031303025000000006044820152606401610081565b601e82111580156102095750601e8111155b61024d5760405162461bcd60e51b81526020600482015260156024820152744665652063616e6e6f74206578636565642033302560581b6044820152606401610081565b600291909155600455565b34600061026482610492565b6040805160018082528183019092529192509060009082816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816102805750506040805160808101808352600554633fc8cef360e01b90915291519293509182916001600160a01b031690633fc8cef3906084808501916020918187030181865afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a91906106c4565b6001600160a01b039081168252600080548216602080850191909152604080850192909252600554825163d4b6846d60e01b8152925160609095019493169263d4b6846d9260048082019392918290030181865afa158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906106c4565b6001600160a01b0316815250816000815181106103d3576103d36106e8565b60209081029190910101526005546001600160a01b0316633da5acba848484336103fe426078610693565b6040518663ffffffff1660e01b815260040161041d94939291906106fe565b6000604051808303818588803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b505060408051898152602081018990523394507fc088815eec48f34ddcb20951bbbed11b1be026b623572b113f3b4cf4966320e8935001905060405180910390a25050505050565b6000806064600254846104a5919061079f565b6104af91906107b6565b905060006064600454856104c3919061079f565b6104cd91906107b6565b9050811561057a576001546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610522576040519150601f19603f3d011682016040523d82523d6000602084013e610527565b606091505b50509050806105785760405162461bcd60e51b815260206004820152601860248201527f506f6f6c20666565207472616e73666572206661696c656400000000000000006044820152606401610081565b505b8015610625576003546040516000916001600160a01b03169083908381818185875af1925050503d80600081146105cd576040519150601f19603f3d011682016040523d82523d6000602084013e6105d2565b606091505b50509050806106235760405162461bcd60e51b815260206004820152601860248201527f5465616d20666565207472616e73666572206661696c656400000000000000006044820152606401610081565b505b8061063083866107d8565b61063a91906107d8565b949350505050565b6000806040838503121561065557600080fd5b50508035926020909101359150565b60006020828403121561067657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106a6576106a661067d565b92915050565b6001600160a01b03811681146106c157600080fd5b50565b6000602082840312156106d657600080fd5b81516106e1816106ac565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000608082018683526080602084015280865180835260a08501915060208801925060005b8181101561077657835180516001600160a01b0390811685526020808301518216818701526040808401511515908701526060928301519091169185019190915290930192608090920191600101610723565b50506001600160a01b038616604085015291506107909050565b82606083015295945050505050565b80820281158282048414176106a6576106a661067d565b6000826107d357634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106a6576106a661067d56fea264697066735822122002b0b394f7d4338ec94c84a83bdbc5095638411cc648eeec11309bcd9108d3c264736f6c634300081c0033";

type AvaPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AvaPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AvaPayment__factory extends ContractFactory {
  constructor(...args: AvaPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    avaAddress: AddressLike,
    prizePoolAddress: AddressLike,
    poolFeePerc_: BigNumberish,
    teamAddress: AddressLike,
    teamFeePerc_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      avaAddress,
      prizePoolAddress,
      poolFeePerc_,
      teamAddress,
      teamFeePerc_,
      overrides || {}
    );
  }
  override deploy(
    avaAddress: AddressLike,
    prizePoolAddress: AddressLike,
    poolFeePerc_: BigNumberish,
    teamAddress: AddressLike,
    teamFeePerc_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      avaAddress,
      prizePoolAddress,
      poolFeePerc_,
      teamAddress,
      teamFeePerc_,
      overrides || {}
    ) as Promise<
      AvaPayment & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AvaPayment__factory {
    return super.connect(runner) as AvaPayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AvaPaymentInterface {
    return new Interface(_abi) as AvaPaymentInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AvaPayment {
    return new Contract(address, _abi, runner) as unknown as AvaPayment;
  }
}
